.toggle-switch {
  --width: 30px;
  --height: 20px;
  --padding: 2px;
  --handle-size: calc(var(--height) - var(--padding) * 2);
  
  display: inline-block;
  outline-width: 0;
}

.toggle-switch > input {
  position: absolute;
  clip: rect(1px, 1px, 1px, 1px);
  clip-path: inset(50%);
  height: 1px;
  width: 1px;
  margin: -1px;
  overflow: hidden;
}

label {
  display: inline-grid;
  grid-template-columns: auto auto;
  column-gap: 10px;
}

.area {
  padding: 4px;
  margin: -4px;
}

.toggle-switch :active {
  outline-width: 0;
}

.background,
.handle {
  transition: all 0.1s ease;
}

.background {
  display: inline-flex;
  flex-direction: row;
  align-items: center;
  width: var(--width);
  height: var(--height);
  border-radius: var(--height);
  padding: 0 var(--padding);
  vertical-align: text-bottom;
  user-select: none;
  background-color: darkgray;
  box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.25);
  overflow: hidden;
  transition: background-color .15s ease;
}

.toggle-switch:focus .area {
  outline: 1px dotted gray;  
}

.toggle-switch:active .area {
  outline-width: 0;
}

.toggle-switch:focus .background,
.area:hover .background {
  background-color: gray;
}

.handle {
  width: var(--handle-size);
  height: var(--handle-size);
  background-color: white;
  border-radius: 50%;
  box-shadow:
    0 2px 4px rgba(0, 0, 0, 0.5),
    inset 0 2px 4px rgba(0, 0, 0, 0.15);
}

.handle:hover {
  background-color: white;
}

input:checked + label .area .background {
  background-color: rgb(58, 135, 236);
}
input + label .area .background {
  background-color: rgb(58, 135, 236);
}
input:hover +label .area .background {
  background-color: rgb(58, 135, 236);
}

input:checked + label .area .handle {
  background-color: white;
  transform: translateX(calc(var(--width) - var(--handle-size)));
}

/**
 * Styles for Codepen.
 */
body {
  font-family: sans-serif;
  color: #3f3f3f;
  margin: 20px auto;
  padding: 0 20px;
  line-height: 1.35;
}

@media (min-width: 640px) {
  body {
    margin-top: 40px;
  }
}


/* Common button styles */
.button {
	float: left;
	min-width: 50px;
	max-width: 100px;
	display: block;
	padding: 1em 2em;
	border: none;
	background: none;
	color: inherit;
	vertical-align: middle;
	position: relative;
	z-index: 1;
	-webkit-backface-visibility: hidden;
	-moz-osx-font-smoothing: grayscale;
}
.button:focus {
	outline: none;
}
.button > span {
	vertical-align: middle;
}

/* Pipaluk */
.button--pipaluk {
	width: 15
  0px;
	color: #fff;
}
.button--pipaluk.button--inverted {
	color: #7986cb;
}
.button--pipaluk::before,
.button--pipaluk::after {
	content: '';
	border-radius: inherit;
	position: absolute;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	z-index: -1;
	-webkit-transition: -webkit-transform 0.3s, background-color 0.3s;
	transition: transform 0.3s, background-color 0.3s;
	-webkit-transition-timing-function: cubic-bezier(0.25, 0, 0.3, 1);
	transition-timing-function: cubic-bezier(0.25, 0, 0.3, 1);
}
.button--pipaluk::before {
	border: 2px solid #7986cb;
}
.button--pipaluk.button--inverted::before {
	border-color: #fff;
}
.button--pipaluk::after {
	background: #7986cb;
}
.button--pipaluk.button--inverted::after {
	background: #fff;
}
.button--pipaluk:hover::before {
	-webkit-transform: scale3d(1, 1, 1);
	transform: scale3d(1, 1, 1);
}
.button--pipaluk::before,
.button--pipaluk:hover::after {
	-webkit-transform: scale3d(0.7, 0.7, 1);
	transform: scale3d(0.7, 0.7, 1);
}
.button--pipaluk:hover::after {
	background-color: #3f51b5;
}
.button--pipaluk.button--inverted:hover::after {
	background-color: #fff;
}
